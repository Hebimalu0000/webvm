FROM --platform=i386 i386/debian:buster-slim
ARG DEBIAN_FRONTEND=noninteractive
RUN apt-get clean && apt-get update 
# && apt-get -y upgrade
#RUN apt-get -y install gcc fakeroot python3 base patch file make git sudo g++ rsync curl iputils-ping
RUN apt-get -y install gcc fakeroot base patch file make git sudo g++ rsync
RUN apt-get clean
RUN useradd -m user && echo "user:password" | chpasswd
RUN echo 'root:password' | chpasswd
RUN echo "your current 'user' password is 'password'."
RUN echo "use 'su -' to become root, and enter the root password , also 'password' if youd like."

# ardupilot build deps - these come from the network, so we need to bake them in so that tailscale/networking is optional later on.
RUN apt-get -y install python3-pip
RUN python3 -m pip install empy==3.3.4


# leave enough to hopefully buld sitl.
RUN echo "getting some ardupilot sources..."
RUN mkdir -p /home/user/ardupilot/modules/mavlink
RUN mkdir -p /home/user/ardupilot/.git
#RUN cd /home/user && git clone --depth=1 --recurse-submodules --shallow-submodules https://github.com/ArduPilot/ardupilot
RUN rm -rf /home/user/ardupilot/modules/gsoap
RUN rm -rf /home/user/ardupilot/modules/CrashDebug
RUN rm -rf /home/user/ardupilot/modules/gbenchmark
RUN rm -rf /home/user/ardupilot/modules/Micro-XRCE-DDS-Client
RUN rm -rf /home/user/ardupilot/modules/Micro-CDR
RUN rm -rf /home/user/ardupilot/modules/gtest
RUN rm -rf /home/user/ardupilot/modules/ChibiOS
RUN rm -rf /home/user/ardupilot/modules/lwip

#dont do this. 
RUN rm -rf /home/user/ardupilot/modules

RUN echo "getting git right..."
RUN git config --global --add safe.directory /home/user/ardupilot
RUN git config --global --add safe.directory /home/user/ardupilot/modules/ChibiOS
RUN git config --global --add safe.directory /mnt/ardupilot
RUN echo "setting user permissions..."
RUN cd /home/user && chown -R user:user .
RUN cd /home/user && chown -R user:user ./ardupilot
RUN cd /home/user && chown -R user:user ./ardupilot/.git
RUN cd /home/user && chown -R user:user ./ardupilot/.*

#COPY --chown=user:user ./examples /home/user/examples
#RUN chmod -R +x  /home/user/examples/lua
# We set WORKDIR, as this gets extracted by Webvm to be used as the cwd. This is optional.
WORKDIR /home/user/
# We set env, as this gets extracted by Webvm. This is optional.
CMD [ "/bin/bash","-c","chown -R user:user /home/user"]
ENV HOME="/home/user" TERM="xterm" USER="user" SHELL="/bin/bash" EDITOR="vim" LANG="en_US.UTF-8" LC_ALL="C"
RUN git config --global --add safe.directory /home/user/ardupilot
CMD [ "/bin/bash","-c","chown -R user:user /home/user"]
CMD [ "/bin/bash" ]
